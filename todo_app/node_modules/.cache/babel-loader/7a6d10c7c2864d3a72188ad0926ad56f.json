{"ast":null,"code":"import _slicedToArray from\"/home/ipc/Desktop/react/todoapp/todo_app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{List,ListItem,ListItemText,Button,Modal}from\"@material-ui/core\";import\"./Todo.css\";import db from\"./firebase\";import DeleteForeverIcon from\"@material-ui/icons/DeleteForever\";function Todo(props){var _useState=useState(props.todo.todo),_useState2=_slicedToArray(_useState,2),input=_useState2[0],setInput=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),open=_useState4[0],setopen=_useState4[1];var handleClose=function handleClose(){setopen(false);};var updateValue=function updateValue(event){event.preventDefault();db.collection(\"todos\").doc(props.todo.id).set({todo:input},{merge:true});setInput(input);setopen(false);};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Modal,{open:open,onClose:handleClose},/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"label\",null,\"Update a Todo\"),/*#__PURE__*/React.createElement(\"input\",{placeholder:props.todo.todo,value:input,onChange:function onChange(event){return setInput(event.target.value);}}),/*#__PURE__*/React.createElement(\"button\",{onClick:updateValue},\"Update\"))),/*#__PURE__*/React.createElement(List,{className:\"todo_list\"},/*#__PURE__*/React.createElement(ListItem,null,/*#__PURE__*/React.createElement(ListItemText,{primary:props.todo.todo})),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(e){return setopen(true);}},\"Edit\"),/*#__PURE__*/React.createElement(DeleteForeverIcon,{onClick:function onClick(event){return db.collection(\"todos\").doc(props.todo.id).delete();}})));}export default Todo;","map":{"version":3,"sources":["/home/ipc/Desktop/react/todoapp/todo_app/src/Todo.js"],"names":["React","useState","List","ListItem","ListItemText","Button","Modal","db","DeleteForeverIcon","Todo","props","todo","input","setInput","open","setopen","handleClose","updateValue","event","preventDefault","collection","doc","id","set","merge","target","value","e","delete"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,QAAf,CAAyBC,YAAzB,CAAuCC,MAAvC,CAA+CC,KAA/C,KAA4D,mBAA5D,CACA,MAAO,YAAP,CACA,MAAOC,CAAAA,EAAP,KAAe,YAAf,CACA,MAAOC,CAAAA,iBAAP,KAA8B,kCAA9B,CAEA,QAASC,CAAAA,IAAT,CAAcC,KAAd,CAAqB,eACOT,QAAQ,CAACS,KAAK,CAACC,IAAN,CAAWA,IAAZ,CADf,wCACZC,KADY,eACLC,QADK,8BAEKZ,QAAQ,CAAC,KAAD,CAFb,yCAEZa,IAFY,eAENC,OAFM,eAInB,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxBD,OAAO,CAAC,KAAD,CAAP,CACD,CAFD,CAIA,GAAME,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAAAC,KAAK,CAAI,CAC3BA,KAAK,CAACC,cAAN,GACAZ,EAAE,CAACa,UAAH,CAAc,OAAd,EACGC,GADH,CACOX,KAAK,CAACC,IAAN,CAAWW,EADlB,EAEGC,GAFH,CAGI,CACEZ,IAAI,CAAEC,KADR,CAHJ,CAMI,CAAEY,KAAK,CAAE,IAAT,CANJ,EAQAX,QAAQ,CAACD,KAAD,CAAR,CACAG,OAAO,CAAC,KAAD,CAAP,CACD,CAZD,CAcA,mBACE,4CACE,oBAAC,KAAD,EAAO,IAAI,CAAED,IAAb,CAAmB,OAAO,CAAEE,WAA5B,eACE,6CACE,iDADF,cAEE,6BACE,WAAW,CAAEN,KAAK,CAACC,IAAN,CAAWA,IAD1B,CAEE,KAAK,CAAEC,KAFT,CAGE,QAAQ,CAAE,kBAAAM,KAAK,QAAIL,CAAAA,QAAQ,CAACK,KAAK,CAACO,MAAN,CAAaC,KAAd,CAAZ,EAHjB,EAFF,cAOE,8BAAQ,OAAO,CAAET,WAAjB,WAPF,CADF,CADF,cAYE,oBAAC,IAAD,EAAM,SAAS,CAAC,WAAhB,eACE,oBAAC,QAAD,mBACE,oBAAC,YAAD,EAAc,OAAO,CAAEP,KAAK,CAACC,IAAN,CAAWA,IAAlC,EADF,CADF,cAIE,oBAAC,MAAD,EAAQ,OAAO,CAAE,iBAAAgB,CAAC,QAAIZ,CAAAA,OAAO,CAAC,IAAD,CAAX,EAAlB,SAJF,cAKE,oBAAC,iBAAD,EACE,OAAO,CAAE,iBAAAG,KAAK,QACZX,CAAAA,EAAE,CACCa,UADH,CACc,OADd,EAEGC,GAFH,CAEOX,KAAK,CAACC,IAAN,CAAWW,EAFlB,EAGGM,MAHH,EADY,EADhB,EALF,CAZF,CADF,CA6BD,CAED,cAAenB,CAAAA,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { List, ListItem, ListItemText, Button, Modal } from \"@material-ui/core\";\nimport \"./Todo.css\";\nimport db from \"./firebase\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nfunction Todo(props) {\n  const [input, setInput] = useState(props.todo.todo);\n  const [open, setopen] = useState(false);\n\n  const handleClose = () => {\n    setopen(false);\n  };\n\n  const updateValue = event => {\n    event.preventDefault();\n    db.collection(\"todos\")\n      .doc(props.todo.id)\n      .set(\n        {\n          todo: input\n        },\n        { merge: true }\n      );\n    setInput(input);\n    setopen(false);\n  };\n\n  return (\n    <div>\n      <Modal open={open} onClose={handleClose}>\n        <form>\n          <label>Update a Todo</label>\n          <input\n            placeholder={props.todo.todo}\n            value={input}\n            onChange={event => setInput(event.target.value)}\n          />\n          <button onClick={updateValue}>Update</button>\n        </form>\n      </Modal>\n      <List className=\"todo_list\">\n        <ListItem>\n          <ListItemText primary={props.todo.todo} />\n        </ListItem>\n        <Button onClick={e => setopen(true)}>Edit</Button>\n        <DeleteForeverIcon\n          onClick={event =>\n            db\n              .collection(\"todos\")\n              .doc(props.todo.id)\n              .delete()\n          }\n        />\n      </List>\n    </div>\n  );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}