{"ast":null,"code":"var _jsxFileName = \"/home/ipc/Desktop/react/todoapp/todo_app/src/Todo.js\";\nimport React, { useState } from \"react\";\nimport { List, ListItem, ListItemText, Button, Modal } from \"@material-ui/core\";\nimport \"./Todo.css\";\nimport db from \"./firebase\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nfunction Todo(props) {\n  const [input, setInput] = useState(props.todo.todo);\n  const [open, setopen] = useState(false);\n  useEffect(() => {\n    setInput(props.todo.todo);\n  }, []);\n\n  const handleClose = () => {\n    setopen(false);\n  };\n\n  const updateValue = event => {\n    event.preventDefault();\n    db.collection(\"todos\").doc(props.todo.id).set({\n      todo: input\n    }, {\n      merge: true\n    });\n    setInput(\"\");\n    setopen(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, \"Update a Todo\"), /*#__PURE__*/React.createElement(\"input\", {\n    placeholder: props.todo.todo,\n    value: input,\n    onChange: event => setInput(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: updateValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Update\"))), /*#__PURE__*/React.createElement(List, {\n    className: \"todo_list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemText, {\n    primary: props.todo.todo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: e => setopen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(DeleteForeverIcon, {\n    onClick: event => db.collection(\"todos\").doc(props.todo.id).delete(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Todo;","map":{"version":3,"sources":["/home/ipc/Desktop/react/todoapp/todo_app/src/Todo.js"],"names":["React","useState","List","ListItem","ListItemText","Button","Modal","db","DeleteForeverIcon","Todo","props","input","setInput","todo","open","setopen","useEffect","handleClose","updateValue","event","preventDefault","collection","doc","id","set","merge","target","value","e","delete"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,YAAzB,EAAuCC,MAAvC,EAA+CC,KAA/C,QAA4D,mBAA5D;AACA,OAAO,YAAP;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,iBAAP,MAA8B,kCAA9B;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACS,KAAK,CAACG,IAAN,CAAWA,IAAZ,CAAlC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,KAAD,CAAhC;AAEAe,EAAAA,SAAS,CAAC,MAAM;AACdJ,IAAAA,QAAQ,CAACF,KAAK,CAACG,IAAN,CAAWA,IAAZ,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMI,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAFD;;AAIA,QAAMG,WAAW,GAAGC,KAAK,IAAI;AAC3BA,IAAAA,KAAK,CAACC,cAAN;AACAb,IAAAA,EAAE,CAACc,UAAH,CAAc,OAAd,EACGC,GADH,CACOZ,KAAK,CAACG,IAAN,CAAWU,EADlB,EAEGC,GAFH,CAGI;AACEX,MAAAA,IAAI,EAAEF;AADR,KAHJ,EAMI;AAAEc,MAAAA,KAAK,EAAE;AAAT,KANJ;AAQAb,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAG,IAAAA,OAAO,CAAC,KAAD,CAAP;AACD,GAZD;;AAcA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAED,IAAb;AAAmB,IAAA,OAAO,EAAEG,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AACE,IAAA,WAAW,EAAEP,KAAK,CAACG,IAAN,CAAWA,IAD1B;AAEE,IAAA,KAAK,EAAEF,KAFT;AAGE,IAAA,QAAQ,EAAEQ,KAAK,IAAIP,QAAQ,CAACO,KAAK,CAACO,MAAN,CAAaC,KAAd,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAOE;AAAQ,IAAA,OAAO,EAAET,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPF,CADF,CADF,eAYE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAER,KAAK,CAACG,IAAN,CAAWA,IAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEe,CAAC,IAAIb,OAAO,CAAC,IAAD,CAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAKE,oBAAC,iBAAD;AACE,IAAA,OAAO,EAAEI,KAAK,IACZZ,EAAE,CACCc,UADH,CACc,OADd,EAEGC,GAFH,CAEOZ,KAAK,CAACG,IAAN,CAAWU,EAFlB,EAGGM,MAHH,EAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAZF,CADF;AA6BD;;AAED,eAAepB,IAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { List, ListItem, ListItemText, Button, Modal } from \"@material-ui/core\";\nimport \"./Todo.css\";\nimport db from \"./firebase\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nfunction Todo(props) {\n  const [input, setInput] = useState(props.todo.todo);\n  const [open, setopen] = useState(false);\n\n  useEffect(() => {\n    setInput(props.todo.todo);\n  }, []);\n  const handleClose = () => {\n    setopen(false);\n  };\n\n  const updateValue = event => {\n    event.preventDefault();\n    db.collection(\"todos\")\n      .doc(props.todo.id)\n      .set(\n        {\n          todo: input\n        },\n        { merge: true }\n      );\n    setInput(\"\");\n    setopen(false);\n  };\n\n  return (\n    <div>\n      <Modal open={open} onClose={handleClose}>\n        <form>\n          <label>Update a Todo</label>\n          <input\n            placeholder={props.todo.todo}\n            value={input}\n            onChange={event => setInput(event.target.value)}\n          />\n          <button onClick={updateValue}>Update</button>\n        </form>\n      </Modal>\n      <List className=\"todo_list\">\n        <ListItem>\n          <ListItemText primary={props.todo.todo} />\n        </ListItem>\n        <Button onClick={e => setopen(true)}>Edit</Button>\n        <DeleteForeverIcon\n          onClick={event =>\n            db\n              .collection(\"todos\")\n              .doc(props.todo.id)\n              .delete()\n          }\n        />\n      </List>\n    </div>\n  );\n}\n\nexport default Todo;\n"]},"metadata":{},"sourceType":"module"}